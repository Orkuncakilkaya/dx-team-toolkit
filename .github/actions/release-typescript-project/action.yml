name: 'Release TypeScript project'
inputs:
  nodeVersion:
    description: 'Node version to use'
    required: false
    type: string
  nodeVersionFile:
    description: 'Node version file to use'
    required: false
    type: string
    default: '.node-version'
  runAfterInstall:
    type: string
    required: false
    description: Commands to run after installing dependencies.
  distFolderNeedForRelease:
    type: boolean
    required: false
    description: Flag that we need `dist` folder to start release process
  skipLinter:
    type: boolean
    description: 'Skip running linter'
    required: false
    default: false
  skipTests:
    type: boolean
    description: 'Skip running tests'
    required: false
    default: false
  skipTypeChecking:
    type: boolean
    description: 'Skip Type Checking'
    required: false
    default: false
  skipBuildFlow:
    type: boolean
    description: 'Skip Build workflow'
    required: false
    default: false
  extraSemanticReleasePlugins:
    type: string
    required: false
    description: Extra plugins for semantic release
    default: ""
  GH_RELEASE_TOKEN:
    type: string
    description: "Github Release Token"
    required: true
  NPM_AUTH_TOKEN:
    description: "NPMJS Authentication Token"
    required: false

runs:
  using: "composite"
  steps:
    - name: 'Checkout'
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: "Build"
      if: ${{ inputs.skipBuildFlow == 'false' }}
      uses: Orkuncakilkaya/dx-team-toolkit/.github/actions/build-typescript-project@v1
      with:
        runAfterInstall: ${{ inputs.runAfterInstall }}
        nodeVersion: ${{ inputs.nodeVersion }}
        artifactName: ${{ inputs.distFolderNeedForRelease && 'dist-folder' || '' }}
        artifactPath: ./dist
        skipTypeChecking: ${{ inputs.skipTypeChecking }}
        skipTests: ${{ inputs.skipTests }}
        skipLinter: ${{ inputs.skipLinter }}

    - name: 'Install Node'
      uses: Orkuncakilkaya/dx-team-toolkit/.github/actions/install-node@v1
      with:
        nodeVersion: ${{ inputs.nodeVersion }}
        nodeVersionFile: ${{ inputs.nodeVersionFile }}

    - name: 'Download dist folder artifact'
      if: ${{ inputs.distFolderNeedForRelease }}
      uses: actions/download-artifact@v3
      with:
        name: dist-folder
        path: ./dist

    - name: 'Install Dependencies and prepare packages'
      run: yarn install
      shell: bash
      env:
        CI: true

    - name: 'Cache node_modules'
      uses: Orkuncakilkaya/dx-team-toolkit/.github/actions/cache-node-modules@v1

    - name: 'Run after install commands'
      run: ${{ inputs.runAfterInstall }}
      shell: bash
      if: ${{ inputs.runAfterInstall != '' }}

    - name: 'Semantic Release'
      uses: cycjimmy/semantic-release-action@91ab76a4a393a8d0c4739e9aea1818b56bc953ea
      with:
        extra_plugins: |
          @semantic-release/exec@6.0.3
          conventional-changelog-conventionalcommits@5.0.0
          ${{ inputs.extraSemanticReleasePlugins }}
      env:
        GITHUB_TOKEN: ${{ inputs.GH_RELEASE_TOKEN }}
        NPM_TOKEN: ${{ inputs.NPM_AUTH_TOKEN }}
        HUSKY: 0

