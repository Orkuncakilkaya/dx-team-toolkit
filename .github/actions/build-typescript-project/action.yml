name: 'Build TypeScript project'
inputs:
  runAfterInstall:
    type: string
    required: false
    description: Commands to run after installing dependencies.
  yarnFlags:
    description: 'Additional flags for yarn install'
    required: false
    type: string
  nodeVersion:
    description: 'Node version to use'
    required: false
    type: string
  nodeVersionFile:
    description: 'Node version file to use'
    required: false
    type: string
    default: '.node-version'
  artifactName:
    description: 'Name of the artifact to upload'
    required: false
    type: string
  skipLinter:
    type: boolean
    description: 'Skip running linter'
    required: false
    default: false
  skipTests:
    type: boolean
    description: 'Skip running tests'
    required: false
    default: false
  skipTypeChecking:
    type: boolean
    description: 'Skip Type Checking'
    required: false
    default: false
  artifactPath:
    description: 'Path of the files to upload as artifact'
    required: false
    type: string
    default: './dist'

runs:
  using: "composite"
  steps:
    - name: "Print inputs"
      shell: bash
      run: echo ${{ inputs }}
    - name: "Print Event inputs"
      shell: bash
      run: echo ${{ github.event.inputs }}
    - name: 'Checkout project for pull_request_target trigger'
      if: ${{ github.event_name == 'pull_request_target' }}
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: 'Checkout project for other scenarios'
      if: ${{ github.event_name != 'pull_request_target' }}
      uses: actions/checkout@v3

    - name: 'Install Node'
      uses: Orkuncakilkaya/dx-team-toolkit/.github/actions/install-node@v1
      with:
        nodeVersion: ${{ github.event.inputs.nodeVersion }}
        nodeVersionFile: ${{ github.event.inputs.nodeVersionFile }}

    - name: 'Cache node_modules'
      uses: Orkuncakilkaya/dx-team-toolkit/.github/actions/cache-node-modules@v1

    - name: 'Install Dependencies and prepare packages'
      shell: bash
      run: yarn install ${{ github.event.inputs.yarnFlags }}
      env:
        CI: true

    - name: 'Run after install'
      shell: bash
      run: ${{ github.event.inputs.runAfterInstall }}
      if: ${{ github.event.inputs.runAfterInstall != '' }}

    - name: 'Build'
      shell: bash
      run: yarn build

    - name: 'Lint'
      if: ${{ github.event.inputs.skipLinter != true }}
      shell: bash
      run: yarn lint

    - name: 'Run tests'
      if: ${{ github.event.inputs.skipTests != true }}
      shell: bash
      run: yarn test

    - name: 'Check types'
      if: ${{ github.event.inputs.skipTypeChecking != true }}
      shell: bash
      run: yarn test:dts

    - name: 'Upload artifact'
      if: ${{ github.event.inputs.artifactName }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.inputs.artifactName }}
        path: ${{ github.event.inputs.artifactPath }}
